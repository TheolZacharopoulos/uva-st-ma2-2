module Iban where

import Data.Char
import Data.List

removeNonAlphaNum :: String -> String
removeNonAlphaNum = flip intersect (['a'..'z']++['A'..'Z']++['0'..'9'])

getCodeChar :: Char -> Int
getCodeChar c = (ord c - ord 'a') + 10

toLowerCase :: String -> String
toLowerCase = map toLower

-- rotate 4 "ABCDEFG" = "EFGABCD"
-- rotate (-2) "ABCDEFG" = "FGABCDE"
rotate :: Int -> [a] -> [a]
rotate x l =  (iterate f l) !! (x `mod` length l)
  where f []     = []
        f (x':xs) = xs ++ [x']

-- perform step 2 of chapter 6.1 of the spec
toNumber :: String -> Integer
toNumber = read . concatMap f
  where f :: Char -> String
        f c = if not (elem c ['a'..'z'])
              then [c]
              else show (getCodeChar c)

iban :: String -> Bool
iban xs = if length xs' < 4
          then False
          else if not (take 2 xs' `elem` iso3166)
                  || not ((xs' !! 2) `elem` num)
                  || not ((xs' !! 3) `elem` num)
               then False
               else (== 1) $ (`mod` 97) $ toNumber $ rotate 4 $ toLowerCase xs'
    where xs' = removeNonAlphaNum xs

alpha :: String
alpha = ['A'..'Z']++['a'..'z']

num :: String
num = ['0'..'9']

alphaNum :: String
alphaNum = num++alpha

iso3166 :: [String]
iso3166 = ["AF"
          ,"AX"
          ,"AL"
          ,"DZ"
          ,"VI"
          ,"SO"
          ,"AD"
          ,"AO"
          ,"AI"
          ,"AQ"
          ,"AG"
          ,"AR"
          ,"AM"
          ,"AW"
          ,"AU"
          ,"AZ"
          ,"BS"
          ,"BH"
          ,"BD"
          ,"BB"
          ,"BE"
          ,"BZ"
          ,"BJ"
          ,"BM"
          ,"BT"
          ,"BO"
          ,"BQ"
          ,"BA"
          ,"BW"
          ,"BV"
          ,"BR"
          ,"VG"
          ,"IO"
          ,"BN"
          ,"BG"
          ,"BF"
          ,"BI"
          ,"KH"
          ,"CA"
          ,"CF"
          ,"CL"
          ,"CN"
          ,"CX"
          ,"CC"
          ,"CO"
          ,"KM"
          ,"CG"
          ,"CD"
          ,"CK"
          ,"CR"
          ,"CU"
          ,"CW"
          ,"CY"
          ,"DK"
          ,"DJ"
          ,"DM"
          ,"DO"
          ,"DE"
          ,"EC"
          ,"EG"
          ,"SV"
          ,"GQ"
          ,"ER"
          ,"EE"
          ,"ET"
          ,"FO"
          ,"FK"
          ,"FJ"
          ,"PH"
          ,"FI"
          ,"FR"
          ,"TF"
          ,"GF"
          ,"PF"
          ,"GA"
          ,"GM"
          ,"GE"
          ,"GH"
          ,"GI"
          ,"GD"
          ,"GR"
          ,"GL"
          ,"GP"
          ,"GU"
          ,"GT"
          ,"GG"
          ,"GN"
          ,"GW"
          ,"GY"
          ,"HT"
          ,"HM"
          ,"HN"
          ,"HU"
          ,"HK"
          ,"IE"
          ,"IS"
          ,"IN"
          ,"ID"
          ,"IQ"
          ,"IR"
          ,"IL"
          ,"IT"
          ,"CI"
          ,"JM"
          ,"JP"
          ,"YE"
          ,"JE"
          ,"JO"
          ,"KY"
          ,"CV"
          ,"CM"
          ,"KZ"
          ,"KE"
          ,"KG"
          ,"KI"
          ,"UM"
          ,"KW"
          ,"HR"
          ,"LA"
          ,"LS"
          ,"LV"
          ,"LB"
          ,"LR"
          ,"LY"
          ,"LI"
          ,"LT"
          ,"LU"
          ,"MO"
          ,"MK"
          ,"MG"
          ,"MW"
          ,"MV"
          ,"MY"
          ,"ML"
          ,"MT"
          ,"IM"
          ,"MA"
          ,"MH"
          ,"MQ"
          ,"MR"
          ,"MU"
          ,"YT"
          ,"MX"
          ,"FM"
          ,"MD"
          ,"MC"
          ,"MN"
          ,"ME"
          ,"MS"
          ,"MZ"
          ,"MM"
          ,"NA"
          ,"NR"
          ,"NL"
          ,"NP"
          ,"NI"
          ,"NC"
          ,"NZ"
          ,"NE"
          ,"NG"
          ,"NU"
          ,"MP"
          ,"KP"
          ,"NO"
          ,"NF"
          ,"UG"
          ,"UA"
          ,"UZ"
          ,"OM"
          ,"AT"
          ,"TL"
          ,"PK"
          ,"PW"
          ,"PS"
          ,"PA"
          ,"PG"
          ,"PY"
          ,"PE"
          ,"PN"
          ,"PL"
          ,"PT"
          ,"PR"
          ,"QA"
          ,"RE"
          ,"RO"
          ,"RU"
          ,"RW"
          ,"BL"
          ,"KN"
          ,"LC"
          ,"PM"
          ,"VC"
          ,"SB"
          ,"WS"
          ,"SM"
          ,"SA"
          ,"ST"
          ,"SN"
          ,"RS"
          ,"SC"
          ,"SL"
          ,"SG"
          ,"SH"
          ,"MF"
          ,"SX"
          ,"SI"
          ,"SK"
          ,"SD"
          ,"SO"
          ,"ES"
          ,"SJ"
          ,"LK"
          ,"SR"
          ,"SZ"
          ,"SY"
          ,"TJ"
          ,"TW"
          ,"TZ"
          ,"TH"
          ,"TG"
          ,"TK"
          ,"TO"
          ,"TT"
          ,"TD"
          ,"CZ"
          ,"TN"
          ,"TR"
          ,"TM"
          ,"TC"
          ,"TV"
          ,"UY"
          ,"VU"
          ,"VA"
          ,"VE"
          ,"AE"
          ,"US"
          ,"GB"
          ,"VN"
          ,"WF"
          ,"EH"
          ,"BY"
          ,"ZM"
          ,"ZW"
          ,"ZA"
          ,"GS"
          ,"KR"
          ,"SS"
          ,"SE"
          ,"CH"]

